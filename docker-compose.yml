version: '2'

services:
  reverse-proxy:
    image: traefik # The official Traefik docker image
    command: --api --docker # Enables the web UI and tells Tr√¶fik to listen to docker
    ports:
      - "80:80"     # The HTTP port
      - "8080:8080" # The Web UI (enabled by --api)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events

  kcli:
    image: node:8
    volumes:
      - './:/home/app'
    environment:
      - BROKER_DAEMON_HOST=kbd:27492
    networks:
      - broker
    working_dir: '/home/app'
    entrypoint: './bin/kcli'

  kbd:
    labels:
      - "traefik.frontend.rule=Host:kbd.kinesis.localhost"
    build:
      context: ./
      dockerfile: docker/broker-daemon/Dockerfile
    volumes:
      - './:/home/app'
      - '/data'
      # This is populated externally w/ an engine
      - 'shared:/shared'
    environment:
      # - GRPC_VERBOSITY=INFO
      # - GRPC_TRACE=all
      - RPC_ADDRESS=0.0.0.0:27492
      - DATA_DIR=/data
      - LND_HOST=lnd_btc:10009
      - LND_TLS_CERT=/shared/lnd-engine-tls.cert
      - LND_MACAROON=/shared/lnd-engine-admin.macaroon
      - GRPC_SSL_CIPHER_SUITES=HIGH+ECDSA
      # This address is specifically tied to the relayer network
      - ENGINE_TYPE=lnd
      # This is a temporary workaround for preventing the use of external networks
      # for the relayer. In a testnet/mainnet setting, this will be a public IP.
      - EXCHANGE_RPC_HOST=docker.for.mac.host.internal:28492
      - MARKETS
    ports:
      - "27492:27492"
    networks:
      - broker
      - lnd
    working_dir: '/home/app'
    entrypoint: bash -c './scripts/build-kbd.sh'

  # These services are imported from the lnd-engine
  repl:
    extends:
      file: ./docker/lnd-docker-compose.yml
      service: repl
    build:
      context: ./

  lnd_btc:
    extends:
      file: ./docker/lnd-docker-compose.yml
      service: lnd_btc
    build:
      context: ./

  btcd:
    extends:
      file: ./docker/lnd-docker-compose.yml
      service: btcd
    build:
      context: ./



volumes:
  shared:
  # These volumes are used in lnd/btc
  lnd:
  bitcoin:

networks:
  broker:
  lnd:
